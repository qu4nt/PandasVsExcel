<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.0.3/jquery.min.js"></script>
<script>
(function() {
  function addWidgetsRenderer() {
    var requireJsScript = document.createElement('script');
    requireJsScript.src = 'https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.4/require.min.js';

    var mimeElement = document.querySelector('script[type="application/vnd.jupyter.widget-view+json"]');
    var jupyterWidgetsScript = document.createElement('script');
    var widgetRendererSrc = 'https://unpkg.com/@jupyter-widgets/html-manager@*/dist/embed-amd.js';
    var widgetState;

    // Fallback for older version:
    try {
      widgetState = mimeElement && JSON.parse(mimeElement.innerHTML);

      if (widgetState && (widgetState.version_major < 2 || !widgetState.version_major)) {
        widgetRendererSrc = 'jupyter-js-widgets@*/dist/embed.js';
      }
    } catch(e) {}

    jupyterWidgetsScript.src = widgetRendererSrc;

    document.body.appendChild(requireJsScript);
    document.body.appendChild(jupyterWidgetsScript);
  }

  document.addEventListener('DOMContentLoaded', addWidgetsRenderer);
}());
</script>

<div class="cell border-box-sizing text_cell rendered" markdown="1">
<div class="inner_cell" markdown="1">
<div class="text_cell_render border-box-sizing rendered_html" markdown="1">
!!! question "¿Qué son las estructuras de datos? Selecciona la opción correcta"

    a. Son variables que no permiten acceder a los datos.
    b. Conjuntos de datos almacenados en un objeto.
    c. Datos desordenados
    d. Conjuntos de datos que permiten un único tipo de datos.

??? success "Respuesta"

    b. Conjuntos de datos almacenados en un objeto.
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered" markdown="1">
<div class="inner_cell" markdown="1">
<div class="text_cell_render border-box-sizing rendered_html" markdown="1">
!!! question "Sobre los arrays (arreglos). Escoge la(s) opción(es) correcta(s)"

    1. Son estructuras de datos.
    2. Pueden ser numéricos o no.
    3. Los valores deben ser del mismo tipo.
    4. Puedes crear arrays con el módulo array o con Numpy.

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered" markdown="1">
<div class="inner_cell" markdown="1">
<div class="text_cell_render border-box-sizing rendered_html" markdown="1">
??? success "Respuesta"

    Las opciones correctas sobre los arrays son:
    1. Son estructuras de datos
    3. Los valores deben ser del mismo tipo (especialmente para arrays creados con el módulo array)
    4. Puedes crear arrays con el módulo array o con Numpy.
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered" markdown="1">
<div class="inner_cell" markdown="1">
<div class="text_cell_render border-box-sizing rendered_html" markdown="1">
!!! question "Almacena la siguiente información en una variable, con el nombre que desees. Una vez hecho lo anterior, accede a los elementos desde la segunda posición, luego guárdalos en una variable y conviértelo en un array"

    ```py
        [['name', 'age', 'sex'],
        ['Kylie', 25, 'F'],
        ['Kanye', 45, 'M'],
        ['Roger', 41, 'M'],
        ['Cristiano', 37,'M'],
        ['Lionel', 35, 'M']]
    ```
    **¿De qué tipo es la variable que almacenaste al inicio?**
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered" markdown="1">
<div class="inner_cell" markdown="1">
<div class="text_cell_render border-box-sizing rendered_html" markdown="1">
??? success "Respuesta"

    En este caso se almacena la lista en una variable cuyo nombre es tarea.

    ```py
    tarea = [['name', 'age', 'sex'],
        ['Kylie', 25, 'F'],
        ['Kanye', 45, 'M'],
        ['Roger', 41, 'M'],
        ['Cristiano', 37,'M'],
        ['Lionel', 35, 'M']]
    ```
    Para obtener los elementos desde la segunda posición debemos tener en cuenta que Python comienza enumerando las posiciones desde el 0, entonces en este caso obtenerlos debemos acceder desde el valor en la posición número 1.

    ```py
    tarea[1:]

    [['Kylie', 25, 'F'],
    ['Kanye', 45, 'M'],
    ['Roger', 41, 'M'],
    ['Cristiano', 37,'M'],
    ['Lionel', 35, 'M']]

    ```

    Ahora, para almacenar esto en una variable cuyo tipo sea array debemos utilizar la biblioteca Numpy.

    ```py
    import numpy as np

    arr = np.array(tarea[1:])
    arr

    array(['Cristiano', '37', 'M'], dtype='<U9')
    ```

    - La variable almacenada al inicio es de tipo list (una lista).
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered" markdown="1">
<div class="inner_cell" markdown="1">
<div class="text_cell_render border-box-sizing rendered_html" markdown="1">
!!! question "Utilizando la variable (de tipo `list`) y el _array_ que almacenaste en el apartado anterior crea un DataFrame de _pandas_."
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered" markdown="1">
<div class="inner_cell" markdown="1">
<div class="text_cell_render border-box-sizing rendered_html" markdown="1">
??? success "Respuesta"

    Debemos importar la biblioteca pandas

    ```py

    import pandas as pd

    data = pd.DataFrame(tarea[1:], columns=tarea[0] )
    data
    ```

    El resultado es 

    | |name|age|sex|
    |:----|:----|:----|:----|
    |0|Kylie|25|F|
    |1|Kanye|45|M|
    |2|Roger|41|M|
    |3|Cristiano|37|M|
    |4|Lionel|35|M|

    ```
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered" markdown="1">
<div class="inner_cell" markdown="1">
<div class="text_cell_render border-box-sizing rendered_html" markdown="1">
!!! question "Para el DataFrame que creaste anteriormente, selecciona la columna 'age' y aplica la función dtype. ¿De qué tipo es?"
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered" markdown="1">
<div class="inner_cell" markdown="1">
<div class="text_cell_render border-box-sizing rendered_html" markdown="1">
??? success ""
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered" markdown="1">
<div class="inner_cell" markdown="1">
<div class="text_cell_render border-box-sizing rendered_html" markdown="1">

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered" markdown="1">
<div class="inner_cell" markdown="1">
<div class="text_cell_render border-box-sizing rendered_html" markdown="1">

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered" markdown="1">
<div class="inner_cell" markdown="1">
<div class="text_cell_render border-box-sizing rendered_html" markdown="1">

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered" markdown="1">
<div class="inner_cell" markdown="1">
<div class="text_cell_render border-box-sizing rendered_html" markdown="1">

</div>
</div>
</div>


